# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# Client | create + queryAll + query(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String) + QueryUpdate(id) + queryDelete(id)
#
#
#
#

# TABLES STRUCTS ----------------------------
# Orders struct
type Order {
  id: Int!
  marketplace_user_id: String!
  client_id: String!
  table_id: String!
  total_price: Float!
  products: [Product!]!
}

# NewOrder
input NewOrder{
  marketplace_user_id: String!
  ClientId: String!
  TableId: String!
  TotalPrice: Float!
}

# User struct
type User {
  Id: ID!
  Name: String
  Description: String
  CNPJ: String
  Email: String
  Password: String
  Image: String
  Superadmin: Boolean
  Admin: Boolean
  Products: [Product]
  Tables: [Table]
}

# New User
input NewUser {
  Name: String!
  Description: String!
  CNPJ: String!
  Email: String!
  Password: String!
  Image: String!
  Superadmin: Boolean!
  Admin: Boolean!
  Products: [NewProduct]
  Tables: [NewTable]
}

# NewProduct
  input NewProduct {
  MarketplaceId: String!
  Name: String!
  Description: String!
  Price: Float!
}

# Tables struct
type Table {
  Id: ID!
  Number: Int
  Qrcode: String
}

# Product struct
type Product {
  Id: Int!
  MarketplaceId: String!
  Name: String!
  Description: String!
  Price: Float!
  order: Order!
}


# Fidelity struct
type Fidelity {
  Id: ID!
  ClientId: String
  Score: Int
}

# Client struct
type Client {
  Id: ID!
  Name: String
  Email: String
  Password: String
  CPF: String
  Phone: String
}

# INPUTS STRUCTS ----------------------------

# New Client
input NewClient{
  Name: String!
  Email: String!
  Password: String!
  CPF: String!
  Phone: String!
}

# NewTables 
input NewTable {
  Number: Int!
  Qrcode: String!
}



# NewFidelity
input NewFidelity {
  ClientId: String!
  Score: Int!
}

type Mutation {
  # Admin side 
  createUser(input: NewUser!): User!
  deleteUser(id:ID!): Boolean!

  createProduct(input: NewProduct!): Product!
  createTable(input: NewTable!): Table!
  # Customer side
  createOrder(input: NewOrder): Order!
  createFidelity(input: NewFidelity!): Fidelity!
  createClient(input: NewClient!): Client!
}

# QUERY -------------------------------------
type Query {
  users: [User]
  findUser(id:ID!): [User]

  tables: [Table]
  findTables(id:ID!): [Table]

  products: [Product]
  findProduct(id:ID!): [Product]

  clients: [Client]
  findClient(id:ID!): [Client]

  orders:[Order]
  findOrder(id:ID!): [Order]

  fidelity: [Fidelity]
  findFidelity(id:ID!): [Fidelity]
}